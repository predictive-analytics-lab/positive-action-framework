[tool.poetry]
name = "paf"
version = "0.1.0"
description = ""
authors = ["Oliver Thomas <ot@example.com>"]

[tool.poetry.dependencies]
python = "^3.9"
typer = "^0.3.2"
optuna = "^2.9.1"
wandb = "^0.12.0"
plotly = "^5.1.0"
ethicml = {extras = ["all"], version = "^0.3.3"}
pytorch-lightning = "^1.4.2"
neoconfigen = "^2.1.0"
hydra-submitit-launcher = {version = "^1.1.1", allow-prereleases = true}
hydra-joblib-launcher = {version = "^1.1.2", allow-prereleases = true}
attrs = "^21.2.0"
conduit = {git = "https://github.com/predictive-analytics-lab/conduit.git", rev = "8531f579e4c1f03e813d5eb4a2fa25ac8f26a56e"}

[tool.poetry.dev-dependencies]
black = "^21.7b0"
mypy = "^0.910"
pydocstyle = "*"
pylint = "^2.9.6"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pre-commit = "^2.14.0"
python-type-stubs = {git = "https://github.com/predictive-analytics-lab/python-type-stubs.git", branch = "main"}
prospector = {extras = ["with_everything"], version = "^1.5.1"}


[build-system]
requires = ["poetry-core>=1.0.0a5"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
run = "paf.main:launcher"

[tool.black]
line-length = 100
target-version = ['py38']
skip-string-normalization = false
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
known_third_party = ["conduit", "ethicml", "hydra", "matplotlib", "numpy", "omegaconf", "pandas", "pytest", "pytorch_lightning", "ranzen", "scipy", "seaborn", "sklearn", "torch", "torchmetrics", "typer", "typing_extensions"]
known_future_library = []
extra_standard_library = ["dataclasses", "__future__", "typing_extensions"]
line_length = 88
profile = "black"
force_sort_within_sections = "True"
classes = ["MISSING"]


[tool.mypy]
python_version = "3.9"
no_implicit_optional = true
allow_redefinition = true
strict_equality = true
check_untyped_defs = true
warn_unreachable = true
disallow_any_unimported = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
show_error_codes = true
warn_unused_ignores = false
exclude = "config_classes/"

[[tool.mypy.overrides]]
module = [
    "pytorch_lightning.*",
    "seaborn.*",
    "scipy.*",
    "sklearn.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "pytorch_lightning.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.pyright]
include = ["paf"]
exclude = ["**/node_modules", "**/__pycache__"]
typeCheckingMode = "basic"
pythonVersion = "3.7"
reportUnusedImport = "error"
reportDuplicateImport  = "error"
reportIncompatibleVariableOverride = "error"
reportOverlappingOverload = "error"
reportUntypedNamedTuple = "error"
reportConstantRedefinition = "warning"
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
strictListInference = true
strictSetInference = true
strictParameterNoneValue = true
